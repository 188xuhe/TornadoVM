<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tornado</groupId>
    <artifactId>tornado</artifactId>
    <version>0.4</version>
    <packaging>pom</packaging>
    <name>tornado</name>
    <url>https://github.com/beehive-lab/tornadovm</url>

    <scm>
        <connection>scm:git:https://github.com/beehive-lab/tornadovm.git</connection>
        <developerConnection>scm:git:https://github.com/beehive-lab/tornadovm.git</developerConnection>
        <url>https://github.com/beehive-lab/tornadovm</url>
    </scm>

    <properties>
        <tornado.version>0.4</tornado.version>
        <graal.version>0.22</graal.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <classifier>${platform}</classifier>
        <download.cmake>false</download.cmake>
    </properties>

    <repositories>
        <repository>
            <id>universityOfManchester-graal</id>
            <url>https://raw.githubusercontent.com/beehive-lab/graal/maven-tornado-repos</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>list-profiles</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echo>Please pick one of the following profiles:</echo>
                                        <echo>* windows-i386-debug</echo>
                                        <echo>* windows-i386-release</echo>
                                        <echo>* windows-amd64-debug</echo>
                                        <echo>* windows-amd64-release</echo>
                                        <echo>* linux-i386-debug</echo>
                                        <echo>* linux-i386-release</echo>
                                        <echo>* linux-amd64-debug</echo>
                                        <echo>* linux-amd64-release</echo>
                                        <echo>* mac-amd64-debug</echo>
                                        <echo>* mac-amd64-release</echo>
                                        <echo/>
                                        <echo>For instance: mvn -Pwindows-i386-debug install</echo>
                                        <fail/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows-i386-debug</id>
            <properties>
                <platform>windows-i386</platform>
                <build.type>debug</build.type>
                <cmake.classifier>windows-i386</cmake.classifier>
                <cmake.generator>Visual Studio 14 2015</cmake.generator>
                <cmake.config>${build.type}</cmake.config>
                <!--
                        CMake interprets the lack of a generator architecture ("-A<platform>") as x86. There doesn't
                        seem to be any other way to specify it.
                        -->
            </properties>
        </profile>
        <profile>
            <id>windows-i386-release</id>
            <activation>
                <property>
                    <name>osDetection</name>
                    <value>!false</value>
                </property>
                <os>
                    <family>windows</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <platform>windows-i386</platform>
                <build.type>release</build.type>
                <cmake.classifier>windows-i386</cmake.classifier>
                <cmake.generator>Visual Studio 14 2015</cmake.generator>
                <cmake.config>${build.type}</cmake.config>
                <!--
                        CMake interprets the lack of a generator architecture ("-A<platform>") as x86. There doesn't
                        seem to be any other way to specify it.
                        -->
            </properties>
        </profile>
        <profile>
            <id>windows-amd64-debug</id>
            <properties>
                <platform>windows-amd64</platform>
                <build.type>debug</build.type>
                <cmake.classifier>windows-amd64</cmake.classifier>
                <cmake.generator>Visual Studio 14 2015</cmake.generator>
                <!--<cmake.options>-Ax64</cmake.options>-->
                <cmake.config>${build.type}</cmake.config>
            </properties>
        </profile>
        <profile>
            <id>windows-amd64-release</id>
            <activation>
                <property>
                    <name>osDetection</name>
                    <value>!false</value>
                </property>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <platform>windows-amd64</platform>
                <build.type>release</build.type>
                <cmake.classifier>windows-amd64</cmake.classifier>
                <cmake.generator>Visual Studio 14 2015</cmake.generator>
                <!--<cmake.options>-Ax64</cmake.options>-->
                <cmake.config>${build.type}</cmake.config>
            </properties>
        </profile>
        <profile>
            <id>linux-i386-debug</id>
            <properties>
                <platform>linux-i386</platform>
                <build.type>debug</build.type>
                <cmake.classifier>linux-i386</cmake.classifier>
                <cmake.generator>Unix Makefiles</cmake.generator>
                <download.cmake>false</download.cmake>
            </properties>
        </profile>
        <profile>
            <id>linux-i386-release</id>
            <activation>
                <property>
                    <name>osDetection</name>
                    <value>!false</value>
                </property>
                <os>
                    <family>linux</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <platform>linux-i386</platform>
                <build.type>release</build.type>
                <cmake.classifier>linux-i386</cmake.classifier>
                <cmake.generator>Unix Makefiles</cmake.generator>
                <download.cmake>false</download.cmake>
            </properties>
        </profile>
        <profile>
            <id>linux-amd64-debug</id>
            <properties>
                <platform>linux-amd64</platform>
                <build.type>debug</build.type>
            </properties>
        </profile>
        <profile>
            <id>linux-amd64-release</id>
            <activation>
                <property>
                    <name>osDetection</name>
                    <value>!false</value>
                </property>
                <os>
                    <family>linux</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <platform>linux-amd64</platform>
                <build.type>release</build.type>
                <cmake.classifier>linux-amd64</cmake.classifier>
                <cmake.generator>Unix Makefiles</cmake.generator>
            </properties>
        </profile>
        <profile>
            <id>mac-amd64-debug</id>
            <properties>
                <platform>mac-amd64</platform>
                <build.type>debug</build.type>
                <cmake.classifier>mac-amd64</cmake.classifier>
                <cmake.generator>Unix Makefiles</cmake.generator>
            </properties>
        </profile>
        <profile>
            <id>mac-amd64-release</id>
            <activation>
                <property>
                    <name>osDetection</name>
                    <value>!false</value>
                </property>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <platform>mac-amd64</platform>
                <build.type>release</build.type>
                <cmake.classifier>mac-amd64</cmake.classifier>
                <cmake.generator>Unix Makefiles</cmake.generator>
            </properties>
        </profile>
        <profile>
            <id>portable</id>
            <!--
                  Sonatype requires a main jar, even for platform-specific artifacts, so we supply it with an
                  empty file.
                  -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.cmake-maven-project</groupId>
                        <artifactId>cmake-maven-plugin</artifactId>
                        <version>3.7.0-b2</version>
                        <executions>
                            <execution>
                                <id>cmake-generate</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>cmake-compile</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <platform>portable</platform>
                <build.type>release</build.type>
                <classifier/>
            </properties>
        </profile>
    </profiles>
    <build>
        <finalName>${project.artifactId}-${project.version}-${buildNumber}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.11.2</version>
                <configuration>
                    <goals>install</goals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
<!--                <version>3.5.1</version>-->
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
<!--                    <source>8</source>-->
<!--                    <target>8</target>-->
<!--                    <release>8</release>-->
                    <compilerArgs>
                        <arg>--add-modules</arg>
                        <arg>ALL-SYSTEM</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.hotspot.meta=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.replacements.classfile=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common.alloc=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common.util=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common.cfg=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir.framemap=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED,jdk.internal.vm.compiler</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED,jdk.internal.vm.compiler</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.graph=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.graph.spi=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir.gen=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodeinfo=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.calc=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.spi=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/jdk.internal.vm.compiler.collections=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.api.runtime=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.code=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.target=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.debug=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.hotspot=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.java=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir.asm=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir.phases=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.graphbuilderconf=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.options=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.tiers=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.util=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.printer=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.runtime=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.graph.iterators=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.java=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.bytecode=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.common=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common.spi=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/jdk.internal.vm.compiler.word=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.api.replacements=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.replacements=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.inlining=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.phases=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common.type=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.extended=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.loop=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.inlining.info=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.inlining.policy=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.common.inlining.walker=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.loop.phases=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.debug=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.memory=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.util=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.virtual=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir.constopt=ALL-UNNAMED </arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.asm=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.cfg=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.phases.schedule=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.virtual.phases.ea=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.lir.ssa=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.common.calc=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.gen=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.core.match=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.memory.address=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.internal.vm.compiler/org.graalvm.compiler.nodes.type=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <doCheck>false</doCheck>
                    <doUpdate>true</doUpdate>
                    <shortRevisionLength>7</shortRevisionLength>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
<!--            <dependency>-->
<!--                <groupId>graal</groupId>-->
<!--                <artifactId>graal</artifactId>-->
<!--                <version>${graal.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>graal</groupId>-->
<!--                <artifactId>truffle-api</artifactId>-->
<!--                <version>${graal.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>jvmci</groupId>-->
<!--                <artifactId>api</artifactId>-->
<!--                <scope>system</scope>-->
<!--                <systemPath>${jvmci.root}/jre/lib/jvmci/jvmci-api.jar</systemPath>-->
<!--                <version>${jvmci.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>jvmci</groupId>-->
<!--                <artifactId>hotspot</artifactId>-->
<!--                <scope>system</scope>-->
<!--                <systemPath>${jvmci.root}/jre/lib/jvmci/jvmci-hotspot.jar</systemPath>-->
<!--                <version>${jvmci.version}</version>-->
<!--            </dependency>-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
<!--                <version>4.10.4</version>-->
                <version>8.2.0</version>
                <type>jar</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.12.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.12.1</version>
        </dependency>
    </dependencies>
    <modules>
        <module>runtime</module>
        <module>matrices</module>
        <module>drivers</module>
        <module>examples</module>
        <module>benchmarks</module>
        <module>unittests</module>
        <module>assembly</module>
        <module>tornado-api</module>
        <module>tornado-annotation</module>
    </modules>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
