#!/bin/bash

#
# This file is part of Tornado: A heterogeneous programming framework: 
# https://github.com/beehive-lab/tornado
#
# Copyright (c) 2013-2018, APT Group, School of Computer Science,
# The University of Manchester. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Authors: James Clarkson
#

if [ -z "${TORNADO_SDK}" ]; then
    echo "Please ensure the TORNADO_SDK environment variable is set correctly"
    exit -1
fi

if [ -z "${JAVA_HOME}" ]; then
    echo "Please ensure the JAVA_HOME environment variable is set correctly"
fi

function print_usage {
    echo "usage:    tornado [options] class [arg0 ... argN]"
    echo ""
    echo "              -h|--help             This message"
    echo "              -v|--verbose          Enable verbose output"
    echo "              -d|--debug            Enable debug output"
    echo ""
    echo "              --igv                 Dump GRAAL IR into IGV"
    echo "              --printKernel         Print autogenerated OpenCL C Kernel"
    echo "              --debug               Print debugging information"
    echo "              --version             Print tornado version information"
    echo "              --log4j <config>      Specifies log4j config file"
    echo "              --printFlags          Prints Tornado Java flags and exits"
    echo ""
    exit 0
}

function print_version {
    cat "${TORNADO_SDK}/etc/tornado.release"
    exit 0
}

TORNADO_FLAGS="-Djava.ext.dirs=${TORNADO_SDK}/share/java/tornado -Djava.library.path=${TORNADO_SDK}/lib"
javaflag=0

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --version)
    print_version
    shift
    ;;
    -v|--verbose)
    TORNADO_FLAGS="${TORNADO_FLAGS} -Dtornado.verbose=True"
    shift # past argument
    ;;
    -d|--debug)
    TORNADO_FLAGS="${TORNADO_FLAGS} -Dtornado.debug=True"
    shift # past argument
    ;;
    --igv)
    TORNADO_FLAGS="${TORNADO_FLAGS} -Dgraal.Dump=*:5 -Dgraal.PrintGraph=true -Dgraal.PrintCFG=false"
    shift # past argument
    ;;
    --printKernel)
    TORNADO_FLAGS="${TORNADO_FLAGS} -Dtornado.opencl.source.print=True "
    shift
    ;;
    --debug)
    TORNADO_FLAGS="${TORNADO_FLAGS} -Dtornado.debug=True "
    shift
    ;;
    --log4j)
    LOG4J_CONFIG="$2"
    shift
    shift
    ;;
    --javaFlags)
    javaflag=1
    shift
    ;;
    -h|--help)
    print_usage
    shift
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ -z "${LOG4J_CONFIG}" ]; then
    LOG4J_CONFIG="${TORNADO_SDK}/etc/log4j2.xml"
fi

TORNADO_FLAGS="${TORNADO_FLAGS}  -Dlog4j.configurationFile=${LOG4J_CONFIG}"

JAVA_CMD=${JAVA_HOME}/bin/java
JAVA_FLAGS="-server -XX:-UseJVMCIClassLoader -XX:-UseCompressedOops ${TORNADO_FLAGS} "

if [ $javaflag -eq 1 ] ; then
	echo $JAVA_CMD
	echo $JAVA_FLAGS
	exit 0
fi

${JAVA_CMD} ${JAVA_FLAGS} $@

